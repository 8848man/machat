// Mocks generated by Mockito 5.4.4 from annotations
// in machat/test/features/token/view_models/token_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:machat/features/token/interfaces/token_service.dart' as _i2;
import 'package:machat/features/token/models/token_log_model.dart' as _i5;
import 'package:machat/features/token/models/token_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TokenService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenService extends _i1.Mock implements _i2.TokenService {
  MockTokenService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.TokenModel?> getUserToken(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserToken,
          [userId],
        ),
        returnValue: _i3.Future<_i4.TokenModel?>.value(),
      ) as _i3.Future<_i4.TokenModel?>);

  @override
  _i3.Future<int> getUserTokenBalance(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getUserTokenBalance,
          [userId],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<void> addTokens(
    String? userId,
    int? amount, {
    String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTokens,
          [
            userId,
            amount,
          ],
          {#description: description},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> spendTokens(
    String? userId,
    int? amount, {
    String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #spendTokens,
          [
            userId,
            amount,
          ],
          {#description: description},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> giveDailyReward(
    String? userId, {
    int? rewardAmount = 10,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #giveDailyReward,
          [userId],
          {#rewardAmount: rewardAmount},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> purchaseTokens(
    String? userId,
    int? amount,
    double? price, {
    String? transactionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #purchaseTokens,
          [
            userId,
            amount,
            price,
          ],
          {#transactionId: transactionId},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.TokenLogModel>> getUserTokenLogs(
    String? userId, {
    int? limit = 50,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserTokenLogs,
          [userId],
          {#limit: limit},
        ),
        returnValue:
            _i3.Future<List<_i5.TokenLogModel>>.value(<_i5.TokenLogModel>[]),
      ) as _i3.Future<List<_i5.TokenLogModel>>);

  @override
  _i3.Future<List<_i5.TokenLogModel>> getLogsByType(
    String? userId,
    _i5.TokenLogType? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLogsByType,
          [
            userId,
            type,
          ],
        ),
        returnValue:
            _i3.Future<List<_i5.TokenLogModel>>.value(<_i5.TokenLogModel>[]),
      ) as _i3.Future<List<_i5.TokenLogModel>>);

  @override
  _i3.Future<List<_i5.TokenLogModel>> getLogsByDays(
    String? userId,
    int? days,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLogsByDays,
          [
            userId,
            days,
          ],
        ),
        returnValue:
            _i3.Future<List<_i5.TokenLogModel>>.value(<_i5.TokenLogModel>[]),
      ) as _i3.Future<List<_i5.TokenLogModel>>);
}
