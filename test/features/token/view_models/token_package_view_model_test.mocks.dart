// Mocks generated by Mockito 5.4.4 from annotations
// in machat/test/features/token/view_models/token_package_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:machat/features/token/interfaces/token_service.dart' as _i2;
import 'package:machat/features/token/models/token_package_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TokenPackageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenPackageService extends _i1.Mock
    implements _i2.TokenPackageService {
  MockTokenPackageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.TokenPackageModel>> getActivePackages() =>
      (super.noSuchMethod(
        Invocation.method(
          #getActivePackages,
          [],
        ),
        returnValue: _i3.Future<List<_i4.TokenPackageModel>>.value(
            <_i4.TokenPackageModel>[]),
      ) as _i3.Future<List<_i4.TokenPackageModel>>);

  @override
  _i3.Future<List<_i4.TokenPackageModel>> getPopularPackages() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularPackages,
          [],
        ),
        returnValue: _i3.Future<List<_i4.TokenPackageModel>>.value(
            <_i4.TokenPackageModel>[]),
      ) as _i3.Future<List<_i4.TokenPackageModel>>);

  @override
  _i3.Future<_i4.TokenPackageModel?> getPackageById(String? packageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPackageById,
          [packageId],
        ),
        returnValue: _i3.Future<_i4.TokenPackageModel?>.value(),
      ) as _i3.Future<_i4.TokenPackageModel?>);

  @override
  _i3.Future<List<_i4.TokenPackageModel>> getPackagesByPriceRange({
    double? minPrice,
    double? maxPrice,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPackagesByPriceRange,
          [],
          {
            #minPrice: minPrice,
            #maxPrice: maxPrice,
          },
        ),
        returnValue: _i3.Future<List<_i4.TokenPackageModel>>.value(
            <_i4.TokenPackageModel>[]),
      ) as _i3.Future<List<_i4.TokenPackageModel>>);

  @override
  _i3.Future<List<_i4.TokenPackageModel>> getPackagesByTokenAmount({
    int? minTokens,
    int? maxTokens,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPackagesByTokenAmount,
          [],
          {
            #minTokens: minTokens,
            #maxTokens: maxTokens,
          },
        ),
        returnValue: _i3.Future<List<_i4.TokenPackageModel>>.value(
            <_i4.TokenPackageModel>[]),
      ) as _i3.Future<List<_i4.TokenPackageModel>>);

  @override
  _i3.Future<_i4.TokenPackageModel?> getBestValuePackage() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBestValuePackage,
          [],
        ),
        returnValue: _i3.Future<_i4.TokenPackageModel?>.value(),
      ) as _i3.Future<_i4.TokenPackageModel?>);

  @override
  _i3.Future<List<_i4.TokenPackageModel>> getPackagesUnderPrice(
          double? maxPrice) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPackagesUnderPrice,
          [maxPrice],
        ),
        returnValue: _i3.Future<List<_i4.TokenPackageModel>>.value(
            <_i4.TokenPackageModel>[]),
      ) as _i3.Future<List<_i4.TokenPackageModel>>);
}
